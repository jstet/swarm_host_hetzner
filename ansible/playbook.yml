---
- hosts: all
  gather_facts: true
  become: false
  vars_files:
    - group_vars/main.yml
  
  tasks:
    - block:
      - name: Initial server setup (security etc.)
        include_role:
          name: jstet.initial_server_setup
        vars:
          extra_packages:
            - htop
            - net-tools
            - vim
            - ufw
            - git
          firewall: false

      - name: Installing Docker
        include_role:
          name: geerlingguy.docker
        vars:
          docker_users:
            - "{{  user  }}"
          docker_daemon_options:
            features:
              buildkit: true
      become: true
    
    - name: Clone a github repository
      git:
        repo: "https://github.com/{{  git_repo  }}"
        dest: /home/{{  user  }}/app
        clone: yes
        update: yes

  
    - name: starting docker swarm mode
      shell:  |
        service docker restart
        docker swarm init
      ignore_errors: true
      become: yes

    - name: run local container registry
      shell: |
        echo 'version: "3"
        services:
          registry:
            image: registry:2
            ports:
              - 5000:5000
            restart: always' > docker-compose.yml
        docker compose up -d


    - name: building images
      shell: cd app && docker compose build --no-cache  
      
    - name: pushing images
      shell: cd app && docker compose push
  
    - name: deploying stack
      shell: |
        cd app && docker stack deploy --prune --resolve-image always -c docker-compose.yml app 
    
    
    - block:
      - name: Installing Caddy
        include_role:
          name: caddy_ansible.caddy_ansible
        vars:
          caddy_config: |
            {{  domain  }} 
            reverse_proxy :8000
            
          caddy_systemd_capabilities_enabled: true
          caddy_systemd_capabilities: "CAP_NET_BIND_SERVICE"
          caddy_setcap: true
      become: true
    
    - name: modify ufw config
      copy:
        src: files/after.rules
        dest: /etc/ufw/after.rules
      become: true
    
    - name: restart ufw
      shell: systemctl restart ufw
      become: true

    - name: allow ssh
      community.general.ufw:
        rule: allow
        name: OpenSSH
    
    - name: allow 80
      community.general.ufw:
        rule: allow
        proto: tcp
        port: '80'
        route: true

    - name: allow 443
      community.general.ufw:
        rule: allow
        proto: tcp
        port: '443'
        route: true

    # - name: allow ports
    #   shell: ufw route allow proto tcp from any to any port 80
    
    - name: deny everything else and enable UFW
      community.general.ufw:
        state: enabled
        policy: deny
    